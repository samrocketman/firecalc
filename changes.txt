Why was this calculator created?
This calculator was created to have easy integration into web applications.  There are many advanced 
javascript/web interface calculators on the web.  This calculator was programmed to be totally 
standards compliant unless a specific browser is being used (Internet Explorer to be exact).  Not only 
is it W3C and MSDN (for IE) standards compliant, but the code itself has a consistent format.  All 
javascript is tabbed the same way, all CSS is tabbed the same way, and all of the HTML is tabbed the 
same way.  What this calculator aims to do is to work in every condition, be standards compliant, and 
when the code is searched through it is very easy to read.  Not only that but it is heavily commented 
to explain the different functions and features from within.  The calculator should work on all
JavaScript enabled, CSS 2.0 compatible web browsers.  All dates are in mm/dd/yyyy format.

Whats new in 1.2.4? (01/21/2008)
Created a completely custom written help system designed by me so the help source can be 
released.  I had used RoboHelp Office at a previous company I worked at because I could have
a copy of it and since that was a $1000 closed source program it didn't make much sense to 
release its content under any kind of open source license.  Now I've designed my own which I
will turn into a sourceforge project so other open source users can benefit from it as well.

*Edit 01/31/2008 I have included a PDF version of the documentation allong with an ODT file
which was created by OpenOffice.org.  1.2.4 is the first SourceForge release of the calculator.

Whats new in 1.2.3? (01/14/2008)
HTML/CSS Changes:
1.	Organized the menu into a table so the branding/version can always be at the right.

Javascript Changes (core functionality of the calculator):
1.	Added menuShadow() which is called in depressButton() in menu_functionality.js  and altered 
	buttonclick() to dynamically create the new shadows.  This feature now adds a shadow to all 
	menus.  This feature wass added for all browsers other than IE.
2.	Changed the way the menu opens so if it overlaps the edge of the window to offset onto the 
	screen so the user can still use it.

Other:
1.	Reorganized the file system that the calculator accesses for its resources.


Whats new in 1.2.2? (01/11/2008)
HTML/CSS Changes:
1.	Created submenu class name for menu_functionality.js and updated other source files 
	accordingly.
2.	Added submenus to Conv menu so user can convert between temperature units

Javascript Changes (core functionality of the calculator):
1.	Fixed bug with browser detection
2.	Totally rewrote menu_functionality.js so it can handle an unlimited amount of submenus and 
	run more efficiently.  Also updated all other code to work with the new menu_functionality.js
3.	Separated custom objects into separate js files
4.	Rewrote the changeSign function in math_functions.js to apply to the whole equation
5.	Changed checkBase to unitCheck function in menu_execution.js and now it runs when 
	buttonMouseover in menu_functionality.js is executed.
6.	Added temperature object to calculator
7.	unitCheck now checks for invalid chars and below absolute zero on all temperatures in 
	menu_execution.js


Whats new in 1.2.1? (01/10/2008)
HTML/CSS Changes:
1.	Added charset encoding to .css files
2.	Fixed bug, onclick in submit button was causing display to be calculated twice.  (it is done 
	through onsubmit of the form)
3.	Changed CSS files by removing transparent as a color so en-default.css is compatable with all 
	browsers
4.	Renamed the View menu to Settings.  I thought it was more appropriate.

Javascript Changes (core functionality of the calculator):
1.	Fixed Bug computing errors with Regular Expressions
2.	Completely rewrote functions compute and deleteChar in math_functions.js
3.	Rewrote functions cos, sin, tan, sqrt, ln, exp, square, and cube to incorporate the newly 
	rewritten compute function in math_functions.js
4.	Global variables are first specified and then initialized after page loads.  This ensures 
	maximum compatibility.
5.	Added a for loop to checkBase function in menu_execution.js


Whats new in 1.2? (12/21/2007)

HTML/CSS Changes:
1.	Converted HTML (it used to be a mess) to HTML 4.01 transitional but allows future 
	compatability with XHTML by using all lowercase tags and properties.
2.	All html files have been validated successfully at http://validator.w3.org/
3.	The base template (en-default.css) has been validated successfully at 
	http://jigsaw.w3.org/css-validator/
4.	Rewrote the stylesheets to incorportate a base template and then add in needed changes on a 
	per browser basis (only for IE basically).  The base template (lang-default.css, right now its 
	just en-default.css) is W3C complaint.  Any other additions or modifications to the style due 
	to other style sheets may not be W3C compliant since it is browser specific.

Javascript Changes (core functionality of the calculator):
1.	Rewrote all code according to MSDN and W3C.
2.	Totally rewrote the function for converting between bases (e.g. base2, base10, etc.).  Now 
	there is a convert object.
3.	Added feature.  Now handles octal conversion (base8) because of the new convert object.
4.	Rewrote the function that shows/hides the base conversion list in the menu (to incorporate the 
	new convert object)
5.	rewrote checkNum() to use the new convert.test object method.
6.	reformatted all programming to have a standard format and indentation that is easiest to read.
7.	rewrote setFloat() to use the new convert.test object method

THE BIG CHANGE OVER 1.0 AND 1.1
	Reorganized the code into SEPARATE css and js files.  It used to all be in the same file.

This section isn't needed but I left it anyway:
	I could not find a validator for the Javascript so I assume there isn't one.
	It has been programmed according to W3C and w3schools.com guidelines unless there is browser 
	specific programming (for IE).  IE specific javascript was written according to MSDN 
	specifications.

Created by Sam Gleske
If you want to use bits and pieces of this code in other projects of yours then please do so!  It would be 
nice to get recognition if you use a piece of my code in another project however since you are not using 
this calculator (and just a piece of it, such as that convert object, it really is nice and took me a long 
time to write/refine/optimize) then I don't require recognition or copyrights to be posted.

Just remember where you get your code from and it would be nice to let others benefit from it just as you 
may have.  The help source is not available for download, sorry.  This may change in the future but it is 
not the case for the time being.

ver 1.1 released around 01/19/2007
ver 1.0 released around 09/??/2005 
(unfortunately I didn't document it very well in the beginning development stages.  Now I'm a better developer)