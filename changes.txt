Why was this calculator created?
This calculator was created to have easy integration into web applications.  There are many advanced 
javascript/web interface calculators on the web.  This calculator was programmed to be totally 
standards compliant unless a specific browser is being used (Internet Explorer to be exact).  Not only 
is it W3C and MSDN (for IE) standards compliant, but the code itself has a consistent format.  All 
javascript is tabbed the same way, all CSS is tabbed the same way, and all of the HTML is tabbed the 
same way.  What this calculator aims to do is to work in every condition, be standards compliant, and 
when the code is searched through it is very easy to read.  Not only that but it is heavily commented 
to explain the different functions and features from within.  The calculator should work on all
JavaScript enabled, CSS 2.0 compatible web browsers.  All dates are in mm/dd/yyyy format.

Whats new in 1.3.3? (10/06/2010)
HTML/CSS Changes:
1.	Fixed bug where clicking on the hr in the Help menu closed it.  Now it stays open.
2.	New Feature: Negative float rounding.  Set the float 2 and 4394379.368313105 becomes 4394379.37.
	Set the float 0 and 4394379.368313105 becomes 4394379.  Set the float -2 and 4394379.368313105 
	becomes 4394400.
3.	New Feature: Now new functions have been added to the calculator.  And certain buttons have
	different functionality than before.  Now logarithmic functions have been included into the 
	calculations for example ln(e^2)+2=4.  Now for the added buttons...
	Clicking ln adds 'ln(' to the equation display.
	Clicking exp adds 'e^(' to the equation display.
	Clicking log adds 'log(' to the equation display.

Javascript Changes (core functionality of the calculator):
1.	Fixed bug with key detection.  Completely rewrote keys.js to accommodate for IE8 and other 
	browsers.  Functionality seems to have been degrading over time and I decided it was time for a
	rewrite.
2.	Fixed bug where JS error was thrown if navigator.userAgent or navigator.vendor didn't exist.
3.	New Feature: Incorporated the compute object replacing calculator math functions, testing, the 
	convert object, and float rounding.  Main function for compute is compute.result().  See the
	compute object source under calc_resources/js/compute_object.js for documentation on all 
	available functions and features in the compute object.  This involves updating dozens of 
	functions so I thought it would be easier to simply list it as a new feature.

Documentation changes:
1.	Testing updated.  Now tested on Windows 7 using Firefox 3.6, IE 8, and Opera 10.62.  All
	known browsers which support JavaScript are fully supported once again.
2.	Documentation buttons and functions now updated to reflect the current available equations for
	compute.result()


Whats new in 1.3.2? (06/27/2009)
HTML/CSS Changes:
1.	Added "Disabled Javascript" warning to calculator (noscript tags).
2.	Added id attributes to the Round Answer and Float=3 menu options in the Edit menu html.
3.	Added degree/radian boolean to calculator display.
4.	Gave each button 2px of space on each side (widened calculator table to 328px).
5.	Added acos, asin, atan, and log buttons to the calculator.
6.	Added Radian/Degree mode for trig calculations.

Javascript Changes (core functionality of the calculator):
1.	Removed coma key shortcut from calculator.  Deprecated by displayToPower() function.
2.	Added new method of calculator focus within init function (in case calculator as a bookmark
	is loaded into the Firefox sidebar).  Now calculator will always grab focus no matter what
	for the shortcut keys to work upon opening.
3.	Created roundFloat() function in menu_execution.js to clean up the html for the edit menu.
4.	Modified compute() function in math_functions.js to prepare for the new sin, cos, tan 
	functions.
5.	Created display_compute() function in math_functions.js to utilize the new compute()
	function.
6.	Modified memory functions in math_functions.js to utilize the new compute() function.
7.	Modified deleteChar() function in math_functions.js to prepare for new sin, cos, tan
	functions.
8.	Heavily modifed checkNum() function in math_functions.js to prepare for new sin, cos, tan
	functions.
9.	Added sin, cos, tan, asin, acos, atan functions to be incorporated into the equation
	display.
10.	Added some automatic error computing when the addChar() function is called in
	math_functions.js
11.	Modified all other calculator button functions for the new compute() function.
12.	Added acos, asin, atan, and log functions to math_functions.js
13. Updated set_titles() function in menu_execution.js for the added buttons

Documentation changes:
1.	Created noframes tags in the index.html of documentation.  Revalidated with w3.org.
2.	Validated the previously invalid folderview.html with w3.org.
3.	Validated the previously invalid search.html with w3.org.
4.	Removed coma key from shortcuts documentation.  Deprecated by displayToPower() function.
5.	Renamed Menu Help > About Menu to Overview.
6.	Corrected a few documentation errors.
7.	Updated all documentation to reflect the current calculator.
8.	Updated PDF documentation to reflect changes.


Whats new in 1.3.1? (05/10/2008)
HTML/CSS Changes:
1.	Bug fix where when page is reloaded by using File > Reload in the calc menu, if the
	calculator file is renamed away from fire_calc.htm the browser would throw a page not found
	error.  Fixed using window.location.reload() method.
2.	Removed the settings menu and associated submenus, mostly unnecessary until further
	development.
3.	Changed method of display for copy/past in Edit menu within init() function.
4.	Calc Display is no longer readonly and when focused the shortcut keys are disabled.
5.	Added favicon link in calculator.

Javascript Changes (core functionality of the calculator):
1.	Bug fix where by using the equation 10^-(1+2 then click the +/- button twice the equation 
	would have an error.
2.	Renamed toggle_titles() to set_titles().  Modified it and is now called in init() function
3.	Updated compute() function to handle equation errors and alert the user.
4.	Call calculator resetting functions in init() function for when File > Reload is used.

Documentation changes:
1.	Moved/renamed button shortcuts to keyboard shortcuts.
2.	Updated documentation to reflect any HTML/CSS changes
3.	Added example equation to disclaimer.
4.	Further updated documentation.
5.	Updated documentation search engine.
6.	Updated menu images


Whats new in 1.3? (10/27/2008)
Javascript Changes (core functionality of the calculator):
1.	Bug fix where calculator would throw errors (not compute) when computing 10^-(1+2) or 10^-3
2.	Bug fix where calculator would display "Infinity" if equation divided by zero like 4/0.
3.	Bug fix where if equation contains errors then the +/- button will infinitely append -(eqn)


Whats new in 1.2.9? (02/22/2008)
HTML/CSS Changes:
1.	Made modifactions to the menu shadow giving it true opacity rather than just a gif.  It is 
	now a png which is better quality than gif format.

Javascript Changes (core functionality of the calculator):
1.	Bug fix where calc would changeSign -43-3 to 43-3 rather than doing it to the entire equation 
	such as -(-43-3).
2.	Bug fix so there can't be a -0 by changeSign
3.	Bug fix where if the calc display is 0 then x^y won't add ^ to the display which would give
	errors when calculating.
4.	Added feature,  Calculator is now fully compatible with the Konqueror.

Documentation changes:
1.	Updated documentation and reindexed the search to reflect changes.
2.	Minor revisions and spelling changes to contributors page and other pages.


Whats new in 1.2.8? (02/17/2008)
HTML/CSS Changes:
1.	Removed the trademark symbol from "Scientific Calculator" because it is not a legally 
	registered trademark.
2.	Removed my name from the title of the calculator page because I thought it was unnecessary. It
	was there from when I first programmed it back in 2005 and I just simply never payed attention
	to it. For production use it doesn't need to be there.

Javascript Changes (core functionality of the calculator):
1.	Programmed new key functionality so the calc is now fully compatible with Safari and Opera
	as well as Firefox, IE, Mozilla, and Netscape.  Hot keys work in all of those browsers. Any 
	unsupported browsers including but not limited to Konqueror probably don't have proper key
	functionality with the calculator.  Functionality for Konqueror will be coming soon.
2.	The pow( function is no longer seen by the user.  Now the user can literally type 2^3 and the
	answer will be 8!  No need to deal with the confusion of typing pow(2,3).
3.	The x^y button now inserts the '^' character instead of "pow("
4.	Pressing the carrot key insterts a '^' symbol into the calculator display.

Documentation changes:
1.	Updated documentation to take note of the JavaScript changes.
2.	Minor revisions and spelling corrections.
3.	Made a pretty new logo for the Calculator documentation.
4.	Added a contributor page under About Author folder to recognise some of those who have 
	directly helped me with either development, testing, or conceptual design (ideas).
5.	Reindexed the search to reflect changes.


Whats new in 1.2.7? (02/07/2008)
HTML/CSS Changes:
1.	Added a new entry to the Settings menu, "Keys Enabled".  This allows the user to toggle the
	shortcut keys for the calculator on/off.  This step was imparative for this calculator to
	be cross platform because of browsers like opera where it has key events but has shortcuts
	for several of the keys used in this calculator.  This incompatibility lead to problems when
	trying to type in the calculator.

Documentation changes:
1.	Reindexed and updated documentation for the added features.
2.	Revised documentation correcting spelling errors.
3.	After more browser testing I have split the browsers compatible with the calculator in to 
	two categories: Fully supported and other (not fully supported).  The full support is if 
	the calc can use the shortcut keys to compute equations.

Javascript Changes (core functionality of the calculator):
1.	toggle_keys() function added to calc_resources\js\menu_execution.js
2.	Slimmed a little bit more code in fire_calc.html and calc_resources\js\menu_execution.js

Other:
1.	Currently Internet Explorer, Mozilla 1.7, Firefox, and Netscape 9 are fully supported for
	the shortcut key functionality.  Other browsers are either not fully supported or untested.


Whats new in 1.2.6? (02/05/2008)
Javascript Changes (core functionality of the calculator):
1.	Finally I totally rewrote calc_resources\js\keys.js.  Keystroke/keycode detection is heavily 
	simplified. Now it uses a switch statement rather than a bunch of if statements for executing
	the keys.
2.	Fixed bug: In Firefox, the '/' key is a shortcut for searching for text.  This is a problem 
	because every time someone divides in Firefox it goes all wierd trying to "search" for text 
	rather than computing the equation.  At the bottom of the functions keydown() and keypress() 
	in calc_resources\js\keys.js I added a new piece of code that grabs focus away from the search
	that way the next key the user types will still interact with the calculator and not the
	Firefox search box.  Does anyone have a better fix?  Please let me know if you do.


Whats new in 1.2.5? (02/03/2008)
Documentation changes:
1.	Changed version numbers in documentation.
2.	Reindexed the entire search documentation to allow changes for the new version to take effect.
3.	Added page numbers to PDF version for easy navigation if document is printed.
4.	Added Table of Contents to the Table of Contents for easier navigation in the PDF.

Javascript Changes (core functionality of the calculator):
1.	Fixed bug in changeSign() function of resources\js\math_functions.js.  When user would change
	the sign by pressing the +/- button on this equation: -(45+3)+(2+3) then rather than changing
	the sign of the whole equation it would change it to: 45+3)+(2+3 and now it has errors.


Whats new in 1.2.4? (01/21/2008)
Created a completely custom written help system designed by me so the help source can be 
released.  I had used RoboHelp Office at a previous company I worked at because I could have
a copy of it and since that was a $1000 closed source program it didn't make much sense to 
release its content under any kind of open source license.  Now I've designed my own which I
will turn into a sourceforge project so other open source users can benefit from it as well.

*Edit 01/31/2008 I have included a PDF version of the documentation allong with an ODT file
which was created by OpenOffice.org.  1.2.4 is the first SourceForge release of the calculator.

Whats new in 1.2.3? (01/14/2008)
HTML/CSS Changes:
1.	Organized the menu into a table so the branding/version can always be at the right.

Javascript Changes (core functionality of the calculator):
1.	Added menuShadow() which is called in depressButton() in menu_functionality.js  and altered 
	buttonclick() to dynamically create the new shadows.  This feature now adds a shadow to all 
	menus.  This feature wass added for all browsers other than IE.
2.	Changed the way the menu opens so if it overlaps the edge of the window to offset onto the 
	screen so the user can still use it.

Other:
1.	Reorganized the file system that the calculator accesses for its resources.


Whats new in 1.2.2? (01/11/2008)
HTML/CSS Changes:
1.	Created submenu class name for menu_functionality.js and updated other source files 
	accordingly.
2.	Added submenus to Conv menu so user can convert between temperature units

Javascript Changes (core functionality of the calculator):
1.	Fixed bug with browser detection
2.	Totally rewrote menu_functionality.js so it can handle an unlimited amount of submenus and 
	run more efficiently.  Also updated all other code to work with the new menu_functionality.js
3.	Separated custom objects into separate js files
4.	Rewrote the changeSign function in math_functions.js to apply to the whole equation
5.	Changed checkBase to unitCheck function in menu_execution.js and now it runs when 
	buttonMouseover in menu_functionality.js is executed.
6.	Added temperature object to calculator
7.	unitCheck now checks for invalid chars and below absolute zero on all temperatures in 
	menu_execution.js


Whats new in 1.2.1? (01/10/2008)
HTML/CSS Changes:
1.	Added charset encoding to .css files
2.	Fixed bug, onclick in submit button was causing display to be calculated twice.  (it is done 
	through onsubmit of the form)
3.	Changed CSS files by removing transparent as a color so en-default.css is compatable with all 
	browsers
4.	Renamed the View menu to Settings.  I thought it was more appropriate.

Javascript Changes (core functionality of the calculator):
1.	Fixed Bug computing errors with Regular Expressions
2.	Completely rewrote functions compute and deleteChar in math_functions.js
3.	Rewrote functions cos, sin, tan, sqrt, ln, exp, square, and cube to incorporate the newly 
	rewritten compute function in math_functions.js
4.	Global variables are first specified and then initialized after page loads.  This ensures 
	maximum compatibility.
5.	Added a for loop to checkBase function in menu_execution.js


Whats new in 1.2? (12/21/2007)
HTML/CSS Changes:
1.	Converted HTML (it used to be a mess) to HTML 4.01 transitional but allows future 
	compatability with XHTML by using all lowercase tags and properties.
2.	All html files have been validated successfully at http://validator.w3.org/
3.	The base template (en-default.css) has been validated successfully at 
	http://jigsaw.w3.org/css-validator/
4.	Rewrote the stylesheets to incorportate a base template and then add in needed changes on a 
	per browser basis (only for IE basically).  The base template (lang-default.css, right now its 
	just en-default.css) is W3C complaint.  Any other additions or modifications to the style due 
	to other style sheets may not be W3C compliant since it is browser specific.

Javascript Changes (core functionality of the calculator):
1.	Rewrote all code according to MSDN and W3C.
2.	Totally rewrote the function for converting between bases (e.g. base2, base10, etc.).  Now 
	there is a convert object.
3.	Added feature.  Now handles octal conversion (base8) because of the new convert object.
4.	Rewrote the function that shows/hides the base conversion list in the menu (to incorporate the 
	new convert object)
5.	rewrote checkNum() to use the new convert.test object method.
6.	reformatted all programming to have a standard format and indentation that is easiest to read.
7.	rewrote setFloat() to use the new convert.test object method


THE BIG CHANGE OVER 1.0 AND 1.1
	Reorganized the code into SEPARATE css and js files.  It used to all be in the same file.

This section isn't needed but I left it anyway:
	I could not find a validator for the Javascript so I assume there isn't one.
	It has been programmed according to W3C and w3schools.com guidelines unless there is browser 
	specific programming (for IE).  IE specific javascript was written according to MSDN 
	specifications.

Created by Sam Gleske
If you want to use bits and pieces of this code in other projects of yours then please do so!  It would be 
nice to get recognition if you use a piece of my code in another project however since you are not using 
this calculator (and just a piece of it, such as that convert object, it really is nice and took me a long 
time to write/refine/optimize) then I don't require recognition or copyrights to be posted.

Just remember where you get your code from and it would be nice to let others benefit from it just as you 
may have.  The help source is not available for download, sorry.  This may change in the future but it is 
not the case for the time being.

ver 1.1 released around 01/19/2007
ver 1.0 released around 09/??/2005 
(unfortunately I didn't document it very well in the beginning development stages.  Now I'm a better developer)
